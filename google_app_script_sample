/**
 * The event handler triggered when editing the spreadsheet.
 * @param {Event} e The onEdit event.
 */
//function onEdit(e) {

  // var colToMonitor = 6;
  // Set a comment on the edited cell to indicate when it was changed.
  // if(e.range.getLastColumn() == colToMonitor) {
    // Logger.log("I am here2")
    // e.range.setNote('Last modified: '+e.range.getValue() );
    // var parentFolder=DriveApp.createFolder(e.range.getValue());
  //var newFolder=parentFolder.createFolder(e.getValue());
    //var a = parentFolder.createFolder(e.range.getValue());
  //}
//}
//function onOpen() {
 // var ui = SpreadsheetApp.getUi();
  // Or DocumentApp or FormApp.
  //ui.createMenu('Law-E')
    //  .addItem('Create Case', 'createFolder')
     // .addSeparator()
      //.addToUi();
//}

//function createFolder() {
  //SpreadsheetApp.getUi() // Or DocumentApp or FormApp.
    // .alert('You clicked the first menu item!');
//}
function createCase(e) {
  var range = SpreadsheetApp.getActiveSheet().getActiveRange();
  var parentFolderId = '1RqdBpwOqlzGP84p9XsEFhjgFGEufTFOm';
  getOrCreateSubFolder(range.getValue(),parentFolderId);
  
}

function getOrCreateSubFolder(childFolderName, parentFolderId){

 var parentFolder =  DriveApp.getFolderById(parentFolderId);
  var childFolders = parentFolder.getFoldersByName(childFolderName);
  SpreadsheetApp.getUi().alert('checking folder.' +childFolders );
  if (!childFolders.hasNext()) { 
    parentFolder.createFolder(childFolderName); 
    SpreadsheetApp.getUi().alert('case Created');
  }
  else {
   SpreadsheetApp.getUi().alert('Its already there');
  }
}
  
  
function isTrigger(funcName){
  var r=false;
  if(funcName){
    var allTriggers=ScriptApp.getProjectTriggers();
    for(var i=0;i<allTriggers.length;i++){
      if(funcName==allTriggers[i].getHandlerFunction()){
        r=true;
        break;
      }
    }
  }
  return r;
}
function createOnEditTrigger() {
  if(!isTrigger('createCase')){
    ScriptApp.newTrigger('createCase').forSpreadsheet(SpreadsheetApp.getActive().getId()).onEdit().create();
  }
}

/*
 * Note:
 * If you need any paid assistant, please write to waqar@accemy.com
 * We provide Apps Script Development services at very reasonable price.
 */

// GLOBALS
//Array of file extension which you would like to extract to Drive
var fileTypesToExtract = ['jpg', 'tif', 'png', 'gif', 'bmp', 'svg'];
//Name of the folder in google drive i which files will be put
var folderName = 'GmailToDrive';
//Name of the label which will be applied after processing the mail message
var labelName = 'GmailToDrive';



function GmailToDrive(){
  //build query to search emails
  var query = '';
  //filename:jpg OR filename:tif OR filename:gif OR fileName:png OR filename:bmp OR filename:svg'; //'after:'+getDateNDaysBack_(1)+
  for(var i in fileTypesToExtract){
	query += (query === '' ?('filename:'+fileTypesToExtract[i]) : (' OR filename:'+fileTypesToExtract[i]));
  }
  query = 'in:inbox has:nouserlabels ' + query;
  var threads = GmailApp.search(query);
  var label = getGmailLabel_(labelName);
  var parentFolder;
  if(threads.length > 0){
    parentFolder = getFolder_(folderName);
  }
  var root = DriveApp.getRootFolder();
  for(var i in threads){
    var mesgs = threads[i].getMessages();
	for(var j in mesgs){
      //get attachments
      var attachments = mesgs[j].getAttachments();
      for(var k in attachments){
        var attachment = attachments[k];
        var isDefinedType = checkIfDefinedType_(attachment);
    	if(!isDefinedType) continue;
    	var attachmentBlob = attachment.copyBlob();
        var file = DriveApp.createFile(attachmentBlob);
        parentFolder.addFile(file);
        root.removeFile(file);
      }
	}
	threads[i].addLabel(label);
  }
}

//This function will get the parent folder in Google drive
function getFolder_(folderName){
  var folder;
  var fi = DriveApp.getFoldersByName(folderName);
  if(fi.hasNext()){
    folder = fi.next();
  }
  else{
    folder = DriveApp.createFolder(folderName);
  }
  return folder;
}

//getDate n days back
// n must be integer
function getDateNDaysBack_(n){
  n = parseInt(n);
  var date = new Date();
  date.setDate(date.getDate() - n);
  return Utilities.formatDate(date, Session.getScriptTimeZone(), 'yyyy/MM/dd');
}

function getGmailLabel_(name){
  var label = GmailApp.getUserLabelByName(name);
  if(!label){
	label = GmailApp.createLabel(name);
  }
  return label;
}

//this function will check for filextension type.
// and return boolean
function checkIfDefinedType_(attachment){
  var fileName = attachment.getName();
  var temp = fileName.split('.');
  var fileExtension = temp[temp.length-1].toLowerCase();
  if(fileTypesToExtract.indexOf(fileExtension) !== -1) return true;
  else return false;
}
